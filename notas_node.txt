--Debugging

Se puede debugear la aplicación utilizando puntos de interrupción como en cualquier programa, para debugear es necesario ir al package.json y dar en Depurar arriba de scripts 
y seleccionar qué comando para correr el proyecto utilizar para debugear

--Callback-hell 

Cuando se llaman múltiples callbacks en una sola función se termina ejecutando solamente el primero y no se muestran los demas o se para esa función

--factory function 

Las factory functions son funciones que crean otras funciones

--Patrón adaptador

Adaptar una dependencia de terceros de nuestra propia forma

--Winston

logger para errores

--Typescript con Node

https://gist.github.com/Klerith/47af527da090043f604b972b22dd4c01
Para ejecutar solamente una vez sin nodemon utilizar ts-node

--Testing con Typescript

Jest se puede utilizar en muchas cosas como React, Vue, Angular, Node con JS y TS
https://gist.github.com/Klerith/98d7b1bc0f1525e892f260813cad1007

Si el código a probar es síncrono no hay necesidad de utilizar "done"

--SpyOn (Testing)

Modifica el valor de retorno en el ambiente actual, en este caso, getFullYear donde sea que se utilice dentro de este ambiente será 1995

-- BUILD y Testing

al usar el script "build": "npm run test && rimraf ./dist && tsc" se hace que primero se corran todas las pruebas de testing y si se obtiene un resultado exitoso entonces se creará
la carpeta dist
es necesario agregar 
"include":["src/**/*"],
"exclude": ["node_modules", "**/*.spec.ts","**/*.test.ts"],
al archivo tsconfig.json


--Sección 6

https://gist.github.com/Klerith/47af527da090043f604b972b22dd4c01

--Arquitectura
    -Domain 
    son las reglas que van a regir las capas exteriores, dentro de esta van los use-cases 
